#include <nusys.h>
#include <string.h>

#include "exception.hpp"

const u8 debug_font_width = 6;
const u8 debug_font_height = 8;
const u8 debug_font_char_per_line = 16;

static const u8 debug_font[] __attribute__((aligned(8))) = {
  0x00,0x10,0x6C,0x00,0x20,0x64,0x20,0x30,0x10,0x22,0x00,0x00,0x00,0x00,0x00,0x00, // ...........#.....##.##............#......##..#....#.......##.......#......#...#.................................................
  0x00,0x38,0x6C,0x28,0x38,0x64,0x50,0x30,0x20,0x10,0x28,0x10,0x00,0x00,0x00,0x04, // ..........###....##.##....#.#.....###....##..#...#.#......##......#........#......#.#......#.................................#..
  0x00,0x38,0x48,0x7C,0x40,0x08,0x50,0x20,0x20,0x10,0x38,0x10,0x00,0x00,0x00,0x08, // ..........###....#..#....#####...#..........#....#.#......#.......#........#......###......#................................#...
  0x00,0x10,0x00,0x28,0x30,0x10,0x20,0x00,0x20,0x10,0x7C,0x7C,0x00,0x7C,0x00,0x10, // ...........#..............#.#.....##.......#......#...............#........#.....#####...#####...........#####.............#....
  0x00,0x10,0x00,0x28,0x08,0x20,0x54,0x00,0x20,0x10,0x38,0x10,0x00,0x00,0x00,0x20, // ...........#..............#.#.......#.....#......#.#.#............#........#......###......#..............................#.....
  0x00,0x00,0x00,0x7C,0x70,0x4C,0x48,0x00,0x20,0x10,0x28,0x10,0x30,0x00,0x30,0x40, // .........................#####...###.....#..##...#..#.............#........#......#.#......#......##..............##.....#......
  0x00,0x10,0x00,0x28,0x10,0x4C,0x34,0x00,0x10,0x20,0x00,0x00,0x30,0x00,0x30,0x00, // ...........#..............#.#......#.....#..##....##.#.............#......#.......................##..............##............
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00, // ..................................................................................................#.............................
  0x38,0x10,0x38,0x38,0x08,0x7C,0x18,0x7C,0x38,0x38,0x00,0x00,0x08,0x00,0x20,0x38, // ..###......#......###.....###.......#....#####.....##....#####....###.....###.......................#.............#.......###...
  0x44,0x30,0x44,0x44,0x18,0x40,0x20,0x04,0x44,0x44,0x00,0x00,0x10,0x00,0x10,0x44, // .#...#....##.....#...#...#...#.....##....#........#..........#...#...#...#...#.....................#...............#.....#...#..
  0x4C,0x10,0x04,0x04,0x28,0x40,0x40,0x08,0x44,0x44,0x30,0x30,0x20,0x7C,0x08,0x04, // .#..##.....#.........#.......#....#.#....#.......#..........#....#...#...#...#....##......##......#......#####......#........#..
  0x54,0x10,0x18,0x38,0x48,0x78,0x78,0x10,0x38,0x3C,0x30,0x30,0x40,0x00,0x04,0x18, // .#.#.#.....#.......##.....###....#..#....####....####......#......###.....####....##......##.....#...................#.....##...
  0x64,0x10,0x20,0x04,0x7C,0x04,0x44,0x20,0x44,0x04,0x00,0x00,0x20,0x00,0x08,0x10, // .##..#.....#......#..........#...#####.......#...#...#....#......#...#.......#....................#.................#......#....
  0x44,0x10,0x40,0x44,0x08,0x44,0x44,0x20,0x44,0x08,0x30,0x30,0x10,0x7C,0x10,0x00, // .#...#.....#.....#.......#...#......#....#...#...#...#....#......#...#......#.....##......##.......#.....#####.....#............
  0x38,0x38,0x7C,0x38,0x08,0x38,0x38,0x20,0x38,0x30,0x30,0x30,0x08,0x00,0x20,0x10, // ..###.....###....#####....###.......#.....###.....###.....#.......###.....##......##......##........#.............#........#....
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00, // ..........................................................................................#.....................................
  0x38,0x38,0x78,0x38,0x78,0x7C,0x7C,0x38,0x44,0x38,0x04,0x44,0x40,0x44,0x44,0x38, // ..###.....###....####.....###....####....#####...#####....###....#...#....###........#...#...#...#.......#...#...#...#....###...
  0x44,0x44,0x44,0x44,0x44,0x40,0x40,0x44,0x44,0x10,0x04,0x48,0x40,0x6C,0x64,0x44, // .#...#...#...#...#...#...#...#...#...#...#.......#.......#...#...#...#.....#.........#...#..#....#.......##.##...##..#...#...#..
  0x5C,0x44,0x44,0x40,0x44,0x40,0x40,0x40,0x44,0x10,0x04,0x50,0x40,0x54,0x54,0x44, // .#.###...#...#...#...#...#.......#...#...#.......#.......#.......#...#.....#.........#...#.#.....#.......#.#.#...#.#.#...#...#..
  0x54,0x44,0x78,0x40,0x44,0x78,0x78,0x5C,0x7C,0x10,0x04,0x60,0x40,0x44,0x4C,0x44, // .#.#.#...#...#...####....#.......#...#...####....####....#.###...#####.....#.........#...##......#.......#...#...#..##...#...#..
  0x5C,0x7C,0x44,0x40,0x44,0x40,0x40,0x44,0x44,0x10,0x44,0x50,0x40,0x44,0x44,0x44, // .#.###...#####...#...#...#.......#...#...#.......#.......#...#...#...#.....#.....#...#...#.#.....#.......#...#...#...#...#...#..
  0x40,0x44,0x44,0x44,0x44,0x40,0x40,0x44,0x44,0x10,0x44,0x48,0x40,0x44,0x44,0x44, // .#.......#...#...#...#...#...#...#...#...#.......#.......#...#...#...#.....#.....#...#...#..#....#.......#...#...#...#...#...#..
  0x38,0x44,0x78,0x38,0x78,0x7C,0x40,0x3C,0x44,0x38,0x38,0x44,0x7C,0x44,0x44,0x38, // ..###....#...#...####.....###....####....#####...#........####...#...#....###.....###....#...#...#####...#...#...#...#....###...
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // ................................................................................................................................
  0x78,0x38,0x78,0x38,0x7C,0x44,0x44,0x44,0x44,0x44,0x78,0x38,0x00,0x38,0x10,0x00, // .####.....###....####.....###....#####...#...#...#...#...#...#...#...#...#...#...####.....###.............###......#............
  0x44,0x44,0x44,0x44,0x10,0x44,0x44,0x44,0x44,0x44,0x08,0x20,0x40,0x08,0x28,0x00, // .#...#...#...#...#...#...#...#.....#.....#...#...#...#...#...#...#...#...#...#......#.....#......#..........#.....#.#...........
  0x44,0x44,0x44,0x40,0x10,0x44,0x44,0x54,0x28,0x44,0x10,0x20,0x20,0x08,0x44,0x00, // .#...#...#...#...#...#...#.........#.....#...#...#...#...#.#.#....#.#....#...#.....#......#.......#.........#....#...#..........
  0x78,0x44,0x78,0x38,0x10,0x44,0x44,0x54,0x10,0x28,0x20,0x20,0x10,0x08,0x00,0x00, // .####....#...#...####.....###......#.....#...#...#...#...#.#.#.....#......#.#.....#.......#........#........#...................
  0x40,0x54,0x48,0x04,0x10,0x44,0x44,0x54,0x28,0x10,0x40,0x20,0x08,0x08,0x00,0x00, // .#.......#.#.#...#..#........#.....#.....#...#...#...#...#.#.#....#.#......#.....#........#.........#.......#...................
  0x40,0x48,0x44,0x44,0x10,0x44,0x28,0x54,0x44,0x10,0x40,0x20,0x04,0x08,0x00,0x00, // .#.......#..#....#...#...#...#.....#.....#...#....#.#....#.#.#...#...#.....#.....#........#..........#......#...................
  0x40,0x34,0x44,0x38,0x10,0x38,0x10,0x28,0x44,0x10,0x78,0x38,0x00,0x38,0x00,0x00, // .#........##.#...#...#....###......#......###......#......#.#....#...#.....#.....####.....###.............###...................
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFC, // ........................................................................................................................######..
  0x30,0x00,0x40,0x00,0x04,0x00,0x18,0x00,0x40,0x10,0x08,0x40,0x10,0x00,0x00,0x00, // ..##.............#...................#.............##............#.........#........#....#.........#............................
  0x30,0x00,0x40,0x00,0x04,0x00,0x20,0x00,0x40,0x00,0x00,0x40,0x10,0x00,0x00,0x00, // ..##.............#...................#............#..............#.......................#.........#............................
  0x10,0x38,0x78,0x38,0x3C,0x38,0x20,0x3C,0x70,0x10,0x18,0x48,0x10,0x68,0x70,0x38, // ...#......###....####.....###.....####....###.....#.......####...###.......#.......##....#..#......#.....##.#....###......###...
  0x00,0x04,0x44,0x44,0x44,0x44,0x78,0x44,0x48,0x10,0x08,0x50,0x10,0x54,0x48,0x44, // .............#...#...#...#...#...#...#...#...#...####....#...#...#..#......#........#....#.#.......#.....#.#.#...#..#....#...#..
  0x00,0x3C,0x44,0x40,0x44,0x78,0x20,0x44,0x48,0x10,0x08,0x60,0x10,0x54,0x48,0x44, // ..........####...#...#...#.......#...#...####.....#......#...#...#..#......#........#....##........#.....#.#.#...#..#....#...#..
  0x00,0x44,0x44,0x44,0x44,0x40,0x20,0x3C,0x48,0x10,0x08,0x50,0x10,0x44,0x48,0x44, // .........#...#...#...#...#...#...#...#...#........#.......####...#..#......#........#....#.#.......#.....#...#...#..#....#...#..
  0x00,0x3C,0x78,0x38,0x3C,0x38,0x20,0x04,0x48,0x18,0x48,0x48,0x18,0x44,0x48,0x38, // ..........####...####.....###.....####....###.....#..........#...#..#......##....#..#....#..#......##....#...#...#..#.....###...
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x30,0x00,0x00,0x00,0x00,0x00, // ..........................................................###.....................##............................................
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x10,0x30,0x28,0x10, // ...........................................................................................##......#......##......#.#......#....
  0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x10,0x08,0x50,0x38, // ..................................#.......................................................#........#........#....#.#......###...
  0x78,0x3C,0x58,0x38,0x78,0x48,0x44,0x44,0x48,0x48,0x78,0x20,0x10,0x08,0x00,0x6C, // .####.....####...#.##.....###....####....#..#....#...#...#...#...#..#....#..#....####.....#........#........#............##.##..
  0x44,0x44,0x24,0x40,0x20,0x48,0x44,0x44,0x48,0x48,0x08,0x60,0x00,0x0C,0x00,0x44, // .#...#...#...#....#..#...#........#......#..#....#...#...#...#...#..#....#..#.......#....##.................##...........#...#..
  0x44,0x44,0x20,0x38,0x20,0x48,0x44,0x54,0x30,0x48,0x30,0x20,0x10,0x08,0x00,0x44, // .#...#...#...#....#.......###.....#......#..#....#...#...#.#.#....##.....#..#.....##......#........#........#............#...#..
  0x44,0x44,0x20,0x04,0x28,0x58,0x28,0x7C,0x48,0x38,0x40,0x20,0x10,0x08,0x00,0x7C, // .#...#...#...#....#..........#....#.#....#.##.....#.#....#####...#..#.....###....#........#........#........#............#####..
  0x78,0x3C,0x70,0x38,0x10,0x28,0x10,0x28,0x48,0x10,0x78,0x18,0x10,0x30,0x00,0x00, // .####.....####...###......###......#......#.#......#......#.#....#..#......#.....####......##......#......##....................
  0x40,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x02,0x00,0x00,0x00  // .#...........#...........................................................##...........................#.........................
};

const reg_desc causeDesc[] = {
    {CAUSE_BD,      CAUSE_BD,    "BD"},
    {CAUSE_IP8,     CAUSE_IP8,   "IP8"},
    {CAUSE_IP7,     CAUSE_IP7,   "IP7"},
    {CAUSE_IP6,     CAUSE_IP6,   "IP6"},
    {CAUSE_IP5,     CAUSE_IP5,   "IP5"},
    {CAUSE_IP4,     CAUSE_IP4,   "IP4"},
    {CAUSE_IP3,     CAUSE_IP3,   "IP3"},
    {CAUSE_SW2,     CAUSE_SW2,   "IP2"},
    {CAUSE_SW1,     CAUSE_SW1,   "IP1"},
    {CAUSE_EXCMASK, EXC_INT,     "Interrupt"},
    {CAUSE_EXCMASK, EXC_MOD,     "TLB modification exception"},
    {CAUSE_EXCMASK, EXC_RMISS,   "TLB on load or instruction"},
    {CAUSE_EXCMASK, EXC_WMISS,   "TLB on store"},
    {CAUSE_EXCMASK, EXC_RADE,    "Addr err on load or instruction"},
    {CAUSE_EXCMASK, EXC_WADE,    "Addr err on store"},
    {CAUSE_EXCMASK, EXC_IBE,     "Bus err on instruction fetch"},
    {CAUSE_EXCMASK, EXC_DBE,     "Bus err on data reference"},
    {CAUSE_EXCMASK, EXC_SYSCALL, "System call exception"},
    {CAUSE_EXCMASK, EXC_BREAK,   "Breakpoint exception"},
    {CAUSE_EXCMASK, EXC_II,      "Reserved instruction"},
    {CAUSE_EXCMASK, EXC_CPU,     "Coprocessor unusable"},
    {CAUSE_EXCMASK, EXC_OV,      "Arithmetic overflow"},
    {CAUSE_EXCMASK, EXC_TRAP,    "Trap exception"},
    {CAUSE_EXCMASK, EXC_VCEI,    "Virtual coherency on intruction"},
    {CAUSE_EXCMASK, EXC_FPE,     "Floating point exception"},
    {CAUSE_EXCMASK, EXC_WATCH,   "Watchpoint exception"},
    {CAUSE_EXCMASK, EXC_VCED,    "Virtual coherency on data reference"},
    {0,             0,           ""}
    };

const reg_desc srDesc[] = {
    {SR_CU3,      SR_CU3,     "CU3"},
    {SR_CU2,      SR_CU2,     "CU2"},
    {SR_CU1,      SR_CU1,     "CU1"},
    {SR_CU0,      SR_CU0,     "CU0"},
    {SR_RP,       SR_RP,      "RP"},
    {SR_FR,       SR_FR,      "FR"},
    {SR_RE,       SR_RE,      "RE"},
    {SR_BEV,      SR_BEV,     "BEV"},
    {SR_TS,       SR_TS,      "TS"},
    {SR_SR,       SR_SR,      "SR"},
    {SR_CH,       SR_CH,      "CH"},
    {SR_CE,       SR_CE,      "CE"},
    {SR_DE,       SR_DE,      "DE"},
    {SR_IBIT8,    SR_IBIT8,   "IM8"},
    {SR_IBIT7,    SR_IBIT7,   "IM7"},
    {SR_IBIT6,    SR_IBIT6,   "IM6"},
    {SR_IBIT5,    SR_IBIT5,   "IM5"},
    {SR_IBIT4,    SR_IBIT4,   "IM4"},
    {SR_IBIT3,    SR_IBIT3,   "IM3"},
    {SR_IBIT2,    SR_IBIT2,   "IM2"},
    {SR_IBIT1,    SR_IBIT1,   "IM1"},
    {SR_KX,       SR_KX,      "KX"},
    {SR_SX,       SR_SX,      "SX"},
    {SR_UX,       SR_UX,      "UX"},
    {SR_KSU_MASK, SR_KSU_USR, "USR"},
    {SR_KSU_MASK, SR_KSU_SUP, "SUP"},
    {SR_KSU_MASK, SR_KSU_KER, "KER"},
    {SR_ERL,      SR_ERL,     "ERL"},
    {SR_EXL,      SR_EXL,     "EXL"},
    {SR_IE,       SR_IE,      "IE"},
    {0,           0,          ""}
};

const reg_desc fpcsrDesc[] = {
    {FPCSR_FS,      FPCSR_FS,    "FS"},
    {FPCSR_C,       FPCSR_C,     "C"},
    {FPCSR_CE,      FPCSR_CE,    "Unimplemented operation"},
    {FPCSR_CV,      FPCSR_CV,    "Invalid operation"},
    {FPCSR_CZ,      FPCSR_CZ,    "Division by zero"},
    {FPCSR_CO,      FPCSR_CO,    "Overflow"},
    {FPCSR_CU,      FPCSR_CU,    "Underflow"},
    {FPCSR_CI,      FPCSR_CI,    "Inexact operation"},
    {FPCSR_EV,      FPCSR_EV,    "EV"},
    {FPCSR_EZ,      FPCSR_EZ,    "EZ"},
    {FPCSR_EO,      FPCSR_EO,    "EO"},
    {FPCSR_EU,      FPCSR_EU,    "EU"},
    {FPCSR_EI,      FPCSR_EI,    "EI"},
    {FPCSR_FV,      FPCSR_FV,    "FV"},
    {FPCSR_FZ,      FPCSR_FZ,    "FZ"},
    {FPCSR_FO,      FPCSR_FO,    "FO"},
    {FPCSR_FU,      FPCSR_FU,    "FU"},
    {FPCSR_FI,      FPCSR_FI,    "FI"},
    {FPCSR_RM_MASK, FPCSR_RM_RN, "RN"},
    {FPCSR_RM_MASK, FPCSR_RM_RZ, "RZ"},
    {FPCSR_RM_MASK, FPCSR_RM_RP, "RP"},
    {FPCSR_RM_MASK, FPCSR_RM_RM, "RM"},
    {0,             0,           ""}
};

void debug_draw_char(u16* buffer, u32 x, u32 y, char c) {
    u8 index = (u8)c - 32;
    u32 xOffset = (index % debug_font_char_per_line);
    u32 yOffset = (index / debug_font_char_per_line) * debug_font_char_per_line * debug_font_height;

    u32 offset = xOffset + yOffset;
    u32 fbX = x; u32 fbY = y;

    for(int i = 0; i < debug_font_height; i++) {
        u8 pixel = debug_font[offset + (debug_font_char_per_line * i)];
        for(int j = 0; j < 6; j++) {
            buffer[320 + (fbY * 320) + fbX] = pixel & (0x80 >> j) ? 0xFFFF : 0x0001;
            fbX++;
        }
        fbX = x;
        fbY++;
    }
}

void debug_draw_string(u16* buffer, u32 x, u32 y, char* message) {
    size_t size = strlen(message);
    for(size_t i = 0; i < size; i++) {
        char c = message[i];
        debug_draw_char(buffer, x + (i * debug_font_width), y, c);
    }

}

void debug_printreg(u16* buffer, u32 x, u32 y, u32 value, char *name, reg_desc *desc) {
    char first = 1;
    char str[128];
    char* cause;

    while(desc->mask != 0) {
        if((value & desc->mask) == desc->value) {
            cause = desc->string;
        }
        desc++;
    }

    sprintf(str, "%s | %08x | %s", name, (u8)value, cause);
    debug_draw_string(buffer, x, y, str);
}
